openapi: 3.0.0
info:
  description: Definition of the operations available for the ASquare Dashboard
  title: ASquare APIs
  version: 0.1.0
servers:
  - url: http://localhost:3000/api
paths:
  /auth/login:
    post:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfile"
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: "Bad request. Some of the inputs provided to the request aren't valid"
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: User password have expired
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: "Internal server error. Additional details will be contained on the server logs."
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginBody"
        description: The request body for logging in.
        required: true
      operationId: userAuthentication
      summary: Login user
      description: Login user using email and password
      tags:
        - Authentication
  /auth/register:
    post:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegisterResponse"
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: "Bad request. Some of the inputs provided to the request aren't valid"
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: "Internal server error. Additional details will be contained on the server logs."
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterBody"
        description: The request body for registering a user
        required: true
      operationId: userRegister
      summary: Register user
      description: Create a new user
      tags:
        - Authentication
  /auth/active/{confirmationCode}:
    get:
      parameters:
        - description: Confirmation code send by email
          in: path
          name: confirmationCode
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The requested completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: "Bad request. Some of the inputs provided to the request aren't valid"
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: "Internal server error. Additional details will be contained on the server logs."
      operationId: userActivation
      summary: Activate user
      description: Activate user via email. Send request to activate user
      tags:
        - Authentication
  /auth/resendemail:
    post:
      responses:
        "200":
          description: The request completed successfully
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: "Bad request. Some of the inputs provided to the request aren't valid"
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: "Internal server error. Additional details will be contained on the server logs."
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResendEmailBody"
      operationId: userResendEmail
      summary: Resend activation email
      description: Resend activation email with the activation token
      tags:
        - Authentication
  /auth/logout:
    get:
      parameters:
        - description: Confirm user is logged in
          in: cookie
          name: access_token
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The requested completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: "Bad request. Some of the inputs provided to the request aren't valid"
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: User password have expired
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: "Internal server error. Additional details will be contained on the server logs."
      operationId: userLogout
      summary: Logout
      description: Send empty cookies to log out a user
      tags:
        - Authentication
  /auth/protected:
    get:
      parameters:
        - description: Confirm user is logged in
          in: cookie
          name: access_token
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The requested completed successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProtectedResponse"
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: "Bad request. Some of the inputs provided to the request aren't valid"
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: User password have expired
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: "Internal server error. Additional details will be contained on the server logs."
      operationId: userProtected
      summary: Protected Route
      description: Protected route only for logged users
      tags:
        - Testing
  /auth/admin/register:
    post:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegisterAdminResponse"
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: "Bad request. Some of the inputs provided to the request aren't valid"
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: "Internal server error. Additional details will be contained on the server logs."
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterAdminBody"
        description: The request body for creating a new admin
        required: true
      operationId: adminRegister
      summary: Register admin
      description: Register a new admin in database
      tags:
        - Authentication
  /auth/admin/login:
    post:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdminProfile"
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: "Bad request. Some of the inputs provided to the request aren't valid"
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: User password have expired
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: "Internal server error. Additional details will be contained on the server logs."
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginAdminBody"
        description: The request body for logging in an admin.
        required: true
      operationId: adminAuthentication
      summary: Login admin
      description: Login admin using email and password
      tags:
        - Authentication

components:
  schemas:
    LoginBody:
      properties:
        email:
          type: string
          pattern: ^[\w-\.]+@([\w-]+\.)+[\w-]{2,6}$
        password:
          type: string
      required:
        - email
        - password
    RegisterBody:
      properties:
        firstName:
          type: string
        lastName:
          type: string
        middleName:
          type: string
        alias:
          type: string
        email:
          type: string
          pattern: ^[\w-\.]+@([\w-]+\.)+[\w-]{2,6}$
        phones:
          type: string
          pattern: ^[0-9-+\s]{8,30}
        avatar:
          type: string
      required:
        - firstName
        - lastName
        - email
    RegisterResponse:
      properties:
        title:
          type: string
        detail:
          type: string
        userData:
          type: object
          properties:
            activationToken:
              type: string
            email:
              type: string
              pattern: ^[\w-\.]+@([\w-]+\.)+[\w-]{2,6}$
            name:
              type: string
    ResendEmailBody:
      properties:
        name:
          type: string
        email:
          type: string
          pattern: ^[\w-\.]+@([\w-]+\.)+[\w-]{2,6}$
        activationToken:
          type: string
    ProtectedResponse:
      properties:
        success:
          type: boolean
        user:
          oneOf:
            - $ref: "#/components/schemas/AdminProfile"
            - $ref: "#/components/schemas/UserProfile"
    RegisterAdminBody:
      properties:
        firstName:
          type: string
        lastName:
          type: string
        middleName:
          type: string
        alias:
          type: string
        dateOfBirth:
          type: object
          properties:
            day:
              type: string
              pattern: ^[0-9]{2}$|^$
            month:
              type: string
              pattern: ^[0-2]{1}\d{1}|3[0-1]{1}|^$
            year:
              type: string
              pattern: ^[0-9]{4}$|^$
          required:
            - day
            - month
            - year
        email:
          type: string
          pattern: ^[\w-\.]+@([\w-]+\.)+[\w-]{2,6}$
        phones:
          type: array
          items:
            $ref: "#/components/schemas/PhoneObject"
        role:
          type: string
          enum:
            - support
            - admin
        avatar:
          type: string
        isActive:
          type: string
          enum:
            - active
            - pending
            - blocked
          default: active
        manager:
          type: string
        department:
          type: string
          enum:
            - sales
            - office
            - support
            - hr
            - it
            - marketing
            - management
            - other
      required:
        - firstName
        - lastName
        - dateOfBirth
        - email
        - phones
        - role
        - department
    RegisterAdminResponse:
      properties:
        title:
          type: string
        detail:
          type: string
        userData:
          type: object
          properties:
            email:
              type: string
              pattern: ^[\w-\.]+@([\w-]+\.)+[\w-]{2,6}$
            name:
              type: string
          required:
            - email
            - name
      required:
        - title
        - detail
        - userData
    LoginAdminBody:
      properties:
        email:
          type: string
          pattern: ^[\w-\.]+@([\w-]+\.)+[\w-]{2,6}$
        password:
          type: string
      required:
        - email
        - password

    UserAddress:
      properties:
        building:
          type: string
          maxLength: 60
          nullable: true
        houseNumber:
          type: string
          maxLength: 60
          nullable: true
        unit:
          type: string
          maxLength: 60
          nullable: true
        street:
          type: string
          maxLength: 60
        postCode:
          type: string
          maxLength: 20
          nullable: true
        locality:
          type: string
          maxLength: 60
        city:
          type: string
          maxLength: 60
        county:
          type: string
          maxLength: 60
          nullable: true
        country:
          type: string
          maxLength: 60
        type:
          type: string
          enum:
            - HOMEADDRESS
            - STOREADDRESS
        isDefault:
          type: boolean
          default: false
      required:
        - street
        - locality
        - city
        - country
        - type

    AdminProfile:
      properties:
        firstName:
          type: string
        lastName:
          type: string
        middleName:
          type: string
          nullable: true
        alias:
          type: string
          nullable: true
        dateOfBirth:
          type: object
          properties:
            day:
              type: string
              pattern: ^[0-9]{2}$|^$
            month:
              type: string
              pattern: ^[0-2]{1}\d{1}|3[0-1]{1}|^$
            year:
              type: string
              pattern: ^[0-9]{4}$|^$
          required:
            - day
            - month
            - year
        email:
          type: string
          pattern: ^[\w-\.]+@([\w-]+\.)+[\w-]{2,6}$
        phones:
          type: array
          items:
            type: object
            properties:
              phone:
                type: string
                maxLength: 30
                minLength: 4
                pattern: ^[0-9-+\s]{8,30}
              type:
                type: string
                enum:
                  - Home
                  - Mobile
                  - Work
                default: Mobile
            required:
              - phone
              - type
        role:
          type: string
          enum:
            - user
            - support
            - admin
        avatar:
          type: string
          nullable: true
        favourites:
          type: array
          nullable: true
          items:
            type: object
            properties:
              _id:
                type: string
        productCreated:
          type: array
          nullable: true
          items:
            type: object
            properties:
              _id:
                type: string
        savedAddress:
          type: array
          nullable: true
          items:
            type: object
            properties:
              _id:
                type: string
        isActive:
          type: string
          enum:
            - pending
            - active
            - blocked
          default: pending
        manager:
          type: string
          nullable: true
        department:
          type: string
          enum:
            - sales
            - office
            - support
            - hr
            - it
            - marketing
            - management
            - other
        resetPasswordToken:
          type: string
          nullable: true
        resetPasswordExpires:
          type: string
          format: date-time
      required:
        - firstName
        - lastName
        - dateOfBirth
        - email
        - phones
        - role
        - isActive
        - manager
        - department
        - resetPasswordExpires

    Brand:
      properties:
        brandName:
          type: string
        brandDescription:
          type: string
        brandImage:
          type: string
          nullable: true
      required:
        - brandName
        - brandDescription

    Cart:
      properties:
        products:
          type: array
          nullable: true
          items:
            type: object
            properties:
              productId:
                type: string
                nullable: true
              quantity:
                type: number
                nullable: true
        userId:
          type: string
        price:
          type: number
          default: 0
        discount:
          type: number
          default: 0
        totalPrice:
          type: number
          default: 0
      required:
        - userId

    Category:
      properties:
        title:
          type: string
          maxLength: 100
        description:
          type: string
          maxLength: 1000
        image:
          type: string
        products:
          type: array
          nullable: true
          items:
            type: string
      required:
        - title
        - description
        - image

    CreditCard:
      properties:
        last4digits:
          type: string
        expiryMonth:
          type: string
        expiryYear:
          type: string
        brand:
          type: string
        country:
          type: string
        userId:
          type: string
      required:
        - last4digits
        - expiryMonth
        - exipryYear
        - brand
        - country
        - userId

    Delivery:
      properties:
        deliveryId:
          type: string
        deliveryDate:
          type: string
          format: date
        deliveryLink:
          type: string
        contactDetails:
          type: object
          properties:
            deliveryAddress:
              $ref: "#/components/schemas/Address"
            customerDetails:
              $ref: "#/components/schemas/CustomerDetails"
        deliveryStatus:
          type: string
          enum:
            - colelcting
            - delivering
            - delivered
          default: collecting
        userId:
          type: string
        orderId:
          type: string
        paymentId:
          type: string
        deliveryType:
          type: string
          enum:
            - delivery
            - pickup
        deliveryPrice:
          type: number
        deliveryFee:
          type: number
        deliveryTotal:
          type: number
        deliveryNote:
          type: string
          nullable: true
        deliveryItems:
          type: array
          items:
            type: string
      required:
        - deliveryId
        - deliveryDate
        - deliveryLink
        - contactDetails
        - deliveryStatus
        - orderId
        - paymentId
        - deliveryType
        - deliveryPrice
        - deliveryFee
        - deliveryItems

    DeliveryReturn:
      properties:
        deliveryReturnId:
          type: string
        returnDate:
          type: string
          format: date
        returnReason:
          type: string
        deliveryAddress:
          type: object
          properties:
            departingFrom:
              $ref: "#/components/schemas/Address"
            arrivingTo:
              $ref: "#/components/schemas/Address"
        customerDetails:
          $ref: "#/components/schemas/CustomerDetails"
        personOfContact:
          $ref: "#/components/schemas/CustomerDetails"
        returnStatus:
          type: string
          enum:
            - colelcting
            - delivering
            - delivered
          default: collecting
        returnId:
          type: string
        returnItems:
          type: array
          items:
            type: string

    Order:
      properties:
        totalAmmount:
          $ref: "#/components/schemas/TotalAmmount"
        status:
          type: string
          enum:
            - pending
            - collecting
            - delivering
            - delivered
            - canceled
            - returned
          default: pending
        contactDetails:
          type: object
          properties:
            deliveryAddress:
              $ref: "#/components/schemas/Address"
            invoiceAddress:
              $ref: "#/components/schemas/Address"
            customerDetails:
              $ref: "#/components/schemas/CustomerDetails"
          required:
            - deliveryAddress
            - invoiceAddress
            - customerDetails
        products:
          type: array
          items:
            type: string
        userId:
          type: string
        voicherId:
          type: string
        paymentId:
          type: string
      required:
        - totalAmmount
        - status
        - contactDetails
        - products
        - paymentId

    Payment:
      properties:
        userId:
          type: string
        customerDetails:
          $ref: "#/components/schemas/CustomerDetails"
        orderId:
          type: string
        currency:
          type: string
        paymentDate:
          type: string
          format: date
        paymentStatus:
          type: string
          enum:
            - paid
            - unpaid
            - onHold
        cardDetails:
          type: object
          properties:
            stripeId:
              type: string
            brand:
              type: string
            last4digits:
              type: string
            expMonth:
              type: string
            expYear:
              type: string
        paymentType:
          type: string
          enum:
            - card
            - cashOnDelivery
            - cashInShop
            - bankTransfer
            - paypal
        stripePaymentId:
          type: string
        paymentDescription:
          type: string
        paymentAmmount:
          type: number
      required:
        - customerDetails
        - orderId
        - currency
        - paymentStatus
        - paymentType
        - paymentAmmount

    Product:
      type: object
      properties:
        title:
          type: string
          maxLength: 256
        description:
          type: string
          maxLength: 50000
        images:
          type: array
          items:
            type: string
        sku:
          type: string
        price:
          type: number
        isOnSale:
          type: boolean
          default: false
        discountPrice:
          type: number
        discount:
          type: number
        sotck:
          type: number
        manufacturerDetails:
          $ref: "#/components/schemas/ManufacturerDetails"
        productSize:
          $ref: "#/components/schemas/ProductSize"
        rating:
          type: number
          default: 0
        warrantyTime:
          type: number
          default: 24
        warrantyType:
          type: string
          default: month
          enum:
            - day
            - month
            - year
        specs:
          type: object
        variants:
          type: array
          items:
            type: string
        category:
          type: string
        subCategory:
          type: string
        brand:
          type: string
      required:
        - title
        - description
        - images
        - sku
        - price
        - stock
        - manufacturerDetails
        - productSize
        - specs
        - category
        - subCategory
        - brand

    Return:
      properties:
        returnDate:
          type: string
          format: date
        returnReason:
          type: string
        returnPrice:
          type: number
        returnStatus:
          type: string
          default: pending
          enum:
            - pending
            - approved
            - rejected
            - collecting
            - collected
            - toWarehouse
        returnedBy:
          type: string
          enum:
            - customer
            - admin
        products:
          type: array
          items:
            type: string
        orderId:
          type: string
        adminId:
          type: string
        contctDetails:
          type: object
          properties:
            customerAddress:
              $ref: "#/components/schemas/Address"
            customerDetails:
              $ref: "#/components/schemas/CustomerDetails"
          required:
            - customerAddress
            - customerDetails
      required:
        - returnDate
        - returnReason
        - returnPrice
        - returnStatus
        - returnedBy
        - products
        - orderId
        - adminId
        - contactDetails

    Review:
      properties:
        title:
          type: string
          maxLength: 100
        description:
          type: string
          maxLength: 2000
        rating:
          type: number
        productId:
          type: string
        userId:
          type: string
      required:
        - rating
        - productId
        - userId

    SubCategory:
      properties:
        title:
          type: string
          maxLength: 100
        description:
          type: string
          maxLength: 1000
        image:
          type: string
        category:
          type: string
      required:
        - title
        - description
        - image
        - category

    Subscribe:
      properties:
        firstName:
          type: string
        lastName:
          type: string
        userId:
          type: string
        email:
          type: string
          pattern: ^[\w-\.]+@([\w-]+\.)+[\w-]{2,6}$

    UserProfile:
      properties:
        firstName:
          type: string
        lastName:
          type: string
        middleName:
          type: string
          nullable: true
        alias:
          type: string
          nullable: true
        dateOfBirth:
          $ref: "#/components/schemas/DateOfBirth"
        email:
          type: string
          pattern: ^[\w-\.]+@([\w-]+\.)+[\w-]{2,6}$
        phones:
          type: array
          items:
            $ref: "#/components/schemas/PhoneObject"
        role:
          type: string
          enum:
            - user
          default: user
        avatar:
          type: string
          nullable: true
        favourites:
          type: array
          items:
            type: object
            properties:
              _id:
                type: string
        savedAddress:
          type: array
          nullable: true
          items:
            type: object
            properties:
              _id:
                type: string
        isActive:
          type: string
          enum:
            - pending
            - active
            - blocked
          default: pending
        resetPasswordToken:
          type: string
        activationToken:
          nullable: true
          type: string
        resetPasswordExpires:
          type: string
          format: date-time

    Voucher:
      properties:
        title:
          type: string
          maxLength: 200
        description:
          type: string
          maxLength: 2000
        image:
          type: string
        discountType:
          type: string
          enum:
            - percentage
            - ammount
          default: percentage
        discount:
          type: number
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        isAdd:
          type: boolean
          default: false
      required:
        - title
        - description
        - discountType
        - discount
        - startDate
        - endDate
        - isAdd

    Warranty:
      properties:
        expirationDate:
          type: string
          format: date
        warrantyType:
          type: string
          enum:
            - warranty
            - extendedWarranty
            - noWarranty
          default: warranty
        warrantyPeriod:
          type: number
          default: 24
        warrantyPeriodType:
          type: string
          enum:
            - day
            - month
            - year
          default: month
        userId:
          type: string
        customerDetails:
          $ref: "#/components/schemas/CustomerDetails"
        orderId:
          type: string
        productId:
          type: string
        productSku:
          type: string
      required:
        - expirationDate
        - warrantyType
        - warrantyPeriod
        - warrantyPeriodType
        - customerDetails
        - orderId
        - productId
        - productSku

    ErrorResponse:
      properties:
        detail:
          description: Optional text that describes the error in more detail
          type: string
        instance:
          description: Optional UID to correlate message to logs
          type: string
        status:
          description: repeat of returned HTTP Status Code
          type: number
        title:
          description: >-
            Human readable summary message that may be displayed back to the
            user.
          maxLength: 1024
          minLength: 1
          type: string
        type:
          description: URI for type of error
          minLength: 1
          type: string
      required:
        - status
        - type
        - title
      type: object
    DateOfBirth:
      type: object
      properties:
        day:
          type: string
          pattern: ^[0-9]{2}$|^$
          nullable: true
        month:
          type: string
          pattern: ^[0-2]{1}\d{1}|3[0-1]{1}|^$
          nullable: true
        year:
          type: string
          pattern: ^[0-9]{4}$|^$
          nullable: true
    Address:
      type: object
      properties:
        building:
          type: string
          maxLength: 60
        houseNumber:
          type: string
          maxLength: 60
        unit:
          type: string
          maxLength: 60
        street:
          type: string
          maxLength: 60
        postCode:
          type: string
          maxLength: 20
        locality:
          type: string
          maxLength: 60
        city:
          type: string
          maxLength: 60
        county:
          type: string
          maxLength: 60
        country:
          type: string
          maxLength: 60
      required:
        - street
        - locality
        - city
        - country

    CustomerDetails:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          pattern: ^[\w-\.]+@([\w-]+\.)+[\w-]{2,6}$
        phones:
          type: array
          items:
            $ref: "#/components/schemas/PhoneObject"
      required:
        - firstName
        - lastName
        - email
        - phones

    PhoneObject:
      type: object
      properties:
        phone:
          type: string
          maxLength: 30
          minLength: 4
          pattern: ^[0-9-+\s]{8,30}
        type:
          type: string
          enum:
            - Home
            - Mobile
            - Work
          default: Mobile
      required:
        - phone
        - type

    TotalAmmount:
      type: object
      properties:
        price:
          type: number
        isDiscount:
          type: boolean
          default: false
        discountType:
          type: string
          enum:
            - percent
            - ammount
          default: percent
        discount:
          type: number
        totalPrice:
          type: number
      required:
        - price
        - totalPrice

    ManufacturerDetails:
      type: object
      properties:
        modelNumber:
          type: string
          maxLength: 256
        releaseDate:
          type: string
          format: date
      required:
        - modelNumber
        - releaseDate

    ProductSize:
      type: object
      properties:
        weight:
          type: number
        width:
          type: number
        height:
          type: number
        depth:
          type: number
      required:
        - weight
        - width
        - height
        - depth
